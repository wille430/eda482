
Debug/keyb:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 unsigned char * OUTPUT = 0x40020c14;
 
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile("BL main\n");					/* call main */
20000004:	f000 f8a6 	bl	20000154 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <kbdActivate>:
unsigned char * GPIO_ODR_HIGH = 0x40020c15;
unsigned char * GPIO_IDR_HIGH = 0x40020c11;
volatile unsigned short * GPIO_MODER = 0x40020c02;

void kbdActivate(unsigned int row)
{
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
20000016:	6078      	str	r0, [r7, #4]
    switch (row)
20000018:	687b      	ldr	r3, [r7, #4]
2000001a:	2b04      	cmp	r3, #4
2000001c:	d01e      	beq.n	2000005c <kbdActivate+0x4c>
2000001e:	687b      	ldr	r3, [r7, #4]
20000020:	2b04      	cmp	r3, #4
20000022:	d820      	bhi.n	20000066 <kbdActivate+0x56>
20000024:	687b      	ldr	r3, [r7, #4]
20000026:	2b03      	cmp	r3, #3
20000028:	d013      	beq.n	20000052 <kbdActivate+0x42>
2000002a:	687b      	ldr	r3, [r7, #4]
2000002c:	2b03      	cmp	r3, #3
2000002e:	d81a      	bhi.n	20000066 <kbdActivate+0x56>
20000030:	687b      	ldr	r3, [r7, #4]
20000032:	2b01      	cmp	r3, #1
20000034:	d003      	beq.n	2000003e <kbdActivate+0x2e>
20000036:	687b      	ldr	r3, [r7, #4]
20000038:	2b02      	cmp	r3, #2
2000003a:	d005      	beq.n	20000048 <kbdActivate+0x38>
    {
        case 1: * GPIO_ODR_HIGH = 0x10; break;
        case 2: * GPIO_ODR_HIGH = 0x20; break;
        case 3: * GPIO_ODR_HIGH = 0x40; break;
        case 4: * GPIO_ODR_HIGH = 0x80; break;
        default: break; * GPIO_ODR_HIGH = 0x0;
2000003c:	e013      	b.n	20000066 <kbdActivate+0x56>
        case 1: * GPIO_ODR_HIGH = 0x10; break;
2000003e:	4b0c      	ldr	r3, [pc, #48]	; (20000070 <kbdActivate+0x60>)
20000040:	681b      	ldr	r3, [r3, #0]
20000042:	2210      	movs	r2, #16
20000044:	701a      	strb	r2, [r3, #0]
20000046:	e00f      	b.n	20000068 <kbdActivate+0x58>
        case 2: * GPIO_ODR_HIGH = 0x20; break;
20000048:	4b09      	ldr	r3, [pc, #36]	; (20000070 <kbdActivate+0x60>)
2000004a:	681b      	ldr	r3, [r3, #0]
2000004c:	2220      	movs	r2, #32
2000004e:	701a      	strb	r2, [r3, #0]
20000050:	e00a      	b.n	20000068 <kbdActivate+0x58>
        case 3: * GPIO_ODR_HIGH = 0x40; break;
20000052:	4b07      	ldr	r3, [pc, #28]	; (20000070 <kbdActivate+0x60>)
20000054:	681b      	ldr	r3, [r3, #0]
20000056:	2240      	movs	r2, #64	; 0x40
20000058:	701a      	strb	r2, [r3, #0]
2000005a:	e005      	b.n	20000068 <kbdActivate+0x58>
        case 4: * GPIO_ODR_HIGH = 0x80; break;
2000005c:	4b04      	ldr	r3, [pc, #16]	; (20000070 <kbdActivate+0x60>)
2000005e:	681b      	ldr	r3, [r3, #0]
20000060:	2280      	movs	r2, #128	; 0x80
20000062:	701a      	strb	r2, [r3, #0]
20000064:	e000      	b.n	20000068 <kbdActivate+0x58>
        default: break; * GPIO_ODR_HIGH = 0x0;
20000066:	46c0      	nop			; (mov r8, r8)
    }
}
20000068:	46c0      	nop			; (mov r8, r8)
2000006a:	46bd      	mov	sp, r7
2000006c:	b002      	add	sp, #8
2000006e:	bd80      	pop	{r7, pc}
20000070:	20000170 	andcs	r0, r0, r0, ror r1

20000074 <kbdGetCol>:


int kbdGetCol(void)
{
20000074:	b580      	push	{r7, lr}
20000076:	b082      	sub	sp, #8
20000078:	af00      	add	r7, sp, #0
    unsigned char c;
    c = * GPIO_IDR_HIGH;
2000007a:	4b13      	ldr	r3, [pc, #76]	; (200000c8 <kbdGetCol+0x54>)
2000007c:	681a      	ldr	r2, [r3, #0]
2000007e:	1dfb      	adds	r3, r7, #7
20000080:	7812      	ldrb	r2, [r2, #0]
20000082:	701a      	strb	r2, [r3, #0]
    
    if (c & 8) return 4;
20000084:	1dfb      	adds	r3, r7, #7
20000086:	781b      	ldrb	r3, [r3, #0]
20000088:	2208      	movs	r2, #8
2000008a:	4013      	ands	r3, r2
2000008c:	d001      	beq.n	20000092 <kbdGetCol+0x1e>
2000008e:	2304      	movs	r3, #4
20000090:	e015      	b.n	200000be <kbdGetCol+0x4a>
    if (c & 4) return 3;
20000092:	1dfb      	adds	r3, r7, #7
20000094:	781b      	ldrb	r3, [r3, #0]
20000096:	2204      	movs	r2, #4
20000098:	4013      	ands	r3, r2
2000009a:	d001      	beq.n	200000a0 <kbdGetCol+0x2c>
2000009c:	2303      	movs	r3, #3
2000009e:	e00e      	b.n	200000be <kbdGetCol+0x4a>
    if (c & 2) return 2;
200000a0:	1dfb      	adds	r3, r7, #7
200000a2:	781b      	ldrb	r3, [r3, #0]
200000a4:	2202      	movs	r2, #2
200000a6:	4013      	ands	r3, r2
200000a8:	d001      	beq.n	200000ae <kbdGetCol+0x3a>
200000aa:	2302      	movs	r3, #2
200000ac:	e007      	b.n	200000be <kbdGetCol+0x4a>
    if (c & 1) return 1;
200000ae:	1dfb      	adds	r3, r7, #7
200000b0:	781b      	ldrb	r3, [r3, #0]
200000b2:	2201      	movs	r2, #1
200000b4:	4013      	ands	r3, r2
200000b6:	d001      	beq.n	200000bc <kbdGetCol+0x48>
200000b8:	2301      	movs	r3, #1
200000ba:	e000      	b.n	200000be <kbdGetCol+0x4a>
    
    return 0;
200000bc:	2300      	movs	r3, #0
}
200000be:	0018      	movs	r0, r3
200000c0:	46bd      	mov	sp, r7
200000c2:	b002      	add	sp, #8
200000c4:	bd80      	pop	{r7, pc}
200000c6:	46c0      	nop			; (mov r8, r8)
200000c8:	20000174 	andcs	r0, r0, r4, ror r1

200000cc <keyb>:

char keyb(void)
{
200000cc:	b590      	push	{r4, r7, lr}
200000ce:	b087      	sub	sp, #28
200000d0:	af00      	add	r7, sp, #0
    char key[] = {1,2,3,0Xa,4,5,6,0Xb,7,8,9,0xc,0xe, 0, 0xf, 0xd};
200000d2:	003b      	movs	r3, r7
200000d4:	4a14      	ldr	r2, [pc, #80]	; (20000128 <keyb+0x5c>)
200000d6:	ca13      	ldmia	r2!, {r0, r1, r4}
200000d8:	c313      	stmia	r3!, {r0, r1, r4}
200000da:	6812      	ldr	r2, [r2, #0]
200000dc:	601a      	str	r2, [r3, #0]
    int row, col;
    for (row = 1; row <= 4; row++) {
200000de:	2301      	movs	r3, #1
200000e0:	617b      	str	r3, [r7, #20]
200000e2:	e019      	b.n	20000118 <keyb+0x4c>
        kbdActivate(row);
200000e4:	697b      	ldr	r3, [r7, #20]
200000e6:	0018      	movs	r0, r3
200000e8:	f7ff ff92 	bl	20000010 <kbdActivate>
        if (col = kbdGetCol())
200000ec:	f7ff ffc2 	bl	20000074 <kbdGetCol>
200000f0:	0003      	movs	r3, r0
200000f2:	613b      	str	r3, [r7, #16]
200000f4:	693b      	ldr	r3, [r7, #16]
200000f6:	2b00      	cmp	r3, #0
200000f8:	d00b      	beq.n	20000112 <keyb+0x46>
        {
            kbdActivate(0);
200000fa:	2000      	movs	r0, #0
200000fc:	f7ff ff88 	bl	20000010 <kbdActivate>
            return key[col - 1 + (row-1) * 4];
20000100:	693b      	ldr	r3, [r7, #16]
20000102:	1e5a      	subs	r2, r3, #1
20000104:	697b      	ldr	r3, [r7, #20]
20000106:	3b01      	subs	r3, #1
20000108:	009b      	lsls	r3, r3, #2
2000010a:	18d3      	adds	r3, r2, r3
2000010c:	003a      	movs	r2, r7
2000010e:	5cd3      	ldrb	r3, [r2, r3]
20000110:	e006      	b.n	20000120 <keyb+0x54>
    for (row = 1; row <= 4; row++) {
20000112:	697b      	ldr	r3, [r7, #20]
20000114:	3301      	adds	r3, #1
20000116:	617b      	str	r3, [r7, #20]
20000118:	697b      	ldr	r3, [r7, #20]
2000011a:	2b04      	cmp	r3, #4
2000011c:	dde2      	ble.n	200000e4 <keyb+0x18>
        }
    }
    return 0xff;
2000011e:	23ff      	movs	r3, #255	; 0xff
}
20000120:	0018      	movs	r0, r3
20000122:	46bd      	mov	sp, r7
20000124:	b007      	add	sp, #28
20000126:	bd90      	pop	{r4, r7, pc}
20000128:	2000017c 	andcs	r0, r0, ip, ror r1

2000012c <init>:

void init(void)
{
2000012c:	b580      	push	{r7, lr}
2000012e:	af00      	add	r7, sp, #0
    * GPIO_MODER |= 0x5555;
20000130:	4b06      	ldr	r3, [pc, #24]	; (2000014c <init+0x20>)
20000132:	681b      	ldr	r3, [r3, #0]
20000134:	881b      	ldrh	r3, [r3, #0]
20000136:	b29a      	uxth	r2, r3
20000138:	4b04      	ldr	r3, [pc, #16]	; (2000014c <init+0x20>)
2000013a:	681b      	ldr	r3, [r3, #0]
2000013c:	4904      	ldr	r1, [pc, #16]	; (20000150 <init+0x24>)
2000013e:	430a      	orrs	r2, r1
20000140:	b292      	uxth	r2, r2
20000142:	801a      	strh	r2, [r3, #0]
}
20000144:	46c0      	nop			; (mov r8, r8)
20000146:	46bd      	mov	sp, r7
20000148:	bd80      	pop	{r7, pc}
2000014a:	46c0      	nop			; (mov r8, r8)
2000014c:	20000178 	andcs	r0, r0, r8, ror r1
20000150:	00005555 	andeq	r5, r0, r5, asr r5

20000154 <main>:

void main(void)
{
20000154:	b590      	push	{r4, r7, lr}
20000156:	b083      	sub	sp, #12
20000158:	af00      	add	r7, sp, #0
    init();
2000015a:	f7ff ffe7 	bl	2000012c <init>
    char out;
    while (1)
    {
        out = keyb();
2000015e:	1dfc      	adds	r4, r7, #7
20000160:	f7ff ffb4 	bl	200000cc <keyb>
20000164:	0003      	movs	r3, r0
20000166:	7023      	strb	r3, [r4, #0]
20000168:	e7f9      	b.n	2000015e <main+0xa>
2000016a:	46c0      	nop			; (mov r8, r8)

2000016c <OUTPUT>:
2000016c:	40020c14 	andmi	r0, r2, r4, lsl ip

20000170 <GPIO_ODR_HIGH>:
20000170:	40020c15 	andmi	r0, r2, r5, lsl ip

20000174 <GPIO_IDR_HIGH>:
20000174:	40020c11 	andmi	r0, r2, r1, lsl ip

20000178 <GPIO_MODER>:
20000178:	40020c02 	andmi	r0, r2, r2, lsl #24
2000017c:	0a030201 	beq	200c0988 <GPIO_MODER+0xc0810>
20000180:	0b060504 	bleq	20181598 <GPIO_MODER+0x181420>
20000184:	0c090807 	stceq	8, cr0, [r9], {7}
20000188:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000158 <main+0x4>

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000018e 	andeq	r0, r0, lr, lsl #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000880c 	andeq	r8, r0, ip, lsl #16
  14:	00010300 	andeq	r0, r1, r0, lsl #6
	...
  24:	00e10200 	rsceq	r0, r1, r0, lsl #4
  28:	06010000 	streq	r0, [r1], -r0
  2c:	00003712 	andeq	r3, r0, r2, lsl r7
  30:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
  34:	03200001 			; <UNDEFINED> instruction: 0x03200001
  38:	00003d04 	andeq	r3, r0, r4, lsl #26
  3c:	08010400 	stmdaeq	r1, {sl}
  40:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  44:	00012702 	andeq	r2, r1, r2, lsl #14
  48:	11120100 	tstne	r2, r0, lsl #2
  4c:	00000037 	andeq	r0, r0, r7, lsr r0
  50:	01700305 	cmneq	r0, r5, lsl #6
  54:	c9022000 	stmdbgt	r2, {sp}
  58:	01000000 	mrseq	r0, (UNDEF: 0)
  5c:	00371113 	eorseq	r1, r7, r3, lsl r1
  60:	03050000 	movweq	r0, #20480	; 0x5000
  64:	20000174 	andcs	r0, r0, r4, ror r1
  68:	00013502 	andeq	r3, r1, r2, lsl #10
  6c:	1b140100 	blne	500474 <startup-0x1faffb8c>
  70:	0000007a 	andeq	r0, r0, sl, ror r0
  74:	01780305 	cmneq	r8, r5, lsl #6
  78:	04032000 	streq	r2, [r3], #-0
  7c:	00000087 	andeq	r0, r0, r7, lsl #1
  80:	b6070204 	strlt	r0, [r7], -r4, lsl #4
  84:	05000000 	streq	r0, [r0, #-0]
  88:	00000080 	andeq	r0, r0, r0, lsl #1
  8c:	0000fe06 	andeq	pc, r0, r6, lsl #28
  90:	06440100 	strbeq	r0, [r4], -r0, lsl #2
  94:	20000154 	andcs	r0, r0, r4, asr r1
  98:	00000016 	andeq	r0, r0, r6, lsl r0
  9c:	00b29c01 	adcseq	r9, r2, r1, lsl #24
  a0:	6f070000 	svcvs	0x00070000
  a4:	01007475 	tsteq	r0, r5, ror r4
  a8:	00b20a47 	adcseq	r0, r2, r7, asr #20
  ac:	91020000 	mrsls	r0, (UNDEF: 2)
  b0:	0104006f 	tsteq	r4, pc, rrx
  b4:	0000f908 	andeq	pc, r0, r8, lsl #18
  b8:	01400800 	cmpeq	r0, r0, lsl #16
  bc:	3f010000 	svccc	0x00010000
  c0:	00012c06 	andeq	r2, r1, r6, lsl #24
  c4:	00002820 	andeq	r2, r0, r0, lsr #16
  c8:	099c0100 	ldmibeq	ip, {r8}
  cc:	00000122 	andeq	r0, r0, r2, lsr #2
  d0:	b2063001 	andlt	r3, r6, #1
  d4:	cc000000 	stcgt	0, cr0, [r0], {-0}
  d8:	60200000 	eorvs	r0, r0, r0
  dc:	01000000 	mrseq	r0, (UNDEF: 0)
  e0:	0001139c 	muleq	r1, ip, r3
  e4:	656b0700 	strbvs	r0, [fp, #-1792]!	; 0xfffff900
  e8:	32010079 	andcc	r0, r1, #121	; 0x79
  ec:	0001130a 	andeq	r1, r1, sl, lsl #6
  f0:	58910200 	ldmpl	r1, {r9}
  f4:	776f7207 	strbvc	r7, [pc, -r7, lsl #4]!
  f8:	09330100 	ldmdbeq	r3!, {r8}
  fc:	0000012a 	andeq	r0, r0, sl, lsr #2
 100:	076c9102 	strbeq	r9, [ip, -r2, lsl #2]!
 104:	006c6f63 	rsbeq	r6, ip, r3, ror #30
 108:	2a0e3301 	bcs	38cd14 <startup-0x1fc732ec>
 10c:	02000001 	andeq	r0, r0, #1
 110:	0a006891 	beq	1a35c <startup-0x1ffe5ca4>
 114:	000000b2 	strheq	r0, [r0], -r2
 118:	00000123 	andeq	r0, r0, r3, lsr #2
 11c:	0001230b 	andeq	r2, r1, fp, lsl #6
 120:	04000f00 	streq	r0, [r0], #-3840	; 0xfffff100
 124:	00bc0704 	adcseq	r0, ip, r4, lsl #14
 128:	040c0000 	streq	r0, [ip], #-0
 12c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
 130:	00d70d00 	sbcseq	r0, r7, r0, lsl #26
 134:	23010000 	movwcs	r0, #4096	; 0x1000
 138:	00012a05 	andeq	r2, r1, r5, lsl #20
 13c:	00007400 	andeq	r7, r0, r0, lsl #8
 140:	00005820 	andeq	r5, r0, r0, lsr #16
 144:	599c0100 	ldmibpl	ip, {r8}
 148:	07000001 	streq	r0, [r0, -r1]
 14c:	25010063 	strcs	r0, [r1, #-99]	; 0xffffff9d
 150:	00003d13 	andeq	r3, r0, r3, lsl sp
 154:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
 158:	007c0e00 	rsbseq	r0, ip, r0, lsl #28
 15c:	16010000 	strne	r0, [r1], -r0
 160:	00001006 	andeq	r1, r0, r6
 164:	00006420 	andeq	r6, r0, r0, lsr #8
 168:	7f9c0100 	svcvc	0x009c0100
 16c:	0f000001 	svceq	0x00000001
 170:	00776f72 	rsbseq	r6, r7, r2, ror pc
 174:	231f1601 	tstcs	pc, #1048576	; 0x100000
 178:	02000001 	andeq	r0, r0, #1
 17c:	08007491 	stmdaeq	r0, {r0, r4, r7, sl, ip, sp, lr}
 180:	000000e8 	andeq	r0, r0, r8, ror #1
 184:	00060901 	andeq	r0, r6, r1, lsl #18
 188:	0c200000 	stceq	0, cr0, [r0], #-0
 18c:	01000000 	mrseq	r0, (UNDEF: 0)
 190:	Address 0x0000000000000190 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13490b39 	movtne	r0, #39737	; 0x9b39
  20:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
  24:	0f030000 	svceq	0x00030000
  28:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	0b0b0024 	bleq	2c00c8 <startup-0x1fd3ff38>
  34:	0e030b3e 	vmoveq.16	d3[0], r0
  38:	35050000 	strcc	r0, [r5, #-0]
  3c:	00134900 	andseq	r4, r3, r0, lsl #18
  40:	012e0600 			; <UNDEFINED> instruction: 0x012e0600
  44:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  48:	0b3b0b3a 	bleq	ec2d38 <startup-0x1f13d2c8>
  4c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  50:	06120111 			; <UNDEFINED> instruction: 0x06120111
  54:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  58:	00130119 	andseq	r0, r3, r9, lsl r1
  5c:	00340700 	eorseq	r0, r4, r0, lsl #14
  60:	0b3a0803 	bleq	e82074 <startup-0x1f17df8c>
  64:	0b390b3b 	bleq	e42d58 <startup-0x1f1bd2a8>
  68:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  6c:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
  70:	03193f00 	tsteq	r9, #0, 30
  74:	3b0b3a0e 	blcc	2ce8b4 <startup-0x1fd3174c>
  78:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  7c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  80:	97184006 	ldrls	r4, [r8, -r6]
  84:	00001942 	andeq	r1, r0, r2, asr #18
  88:	3f012e09 	svccc	0x00012e09
  8c:	3a0e0319 	bcc	380cf8 <startup-0x1fc7f308>
  90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  94:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  98:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  9c:	96184006 	ldrls	r4, [r8], -r6
  a0:	13011942 	movwne	r1, #6466	; 0x1942
  a4:	010a0000 	mrseq	r0, (UNDEF: 10)
  a8:	01134901 	tsteq	r3, r1, lsl #18
  ac:	0b000013 	bleq	100 <startup-0x1fffff00>
  b0:	13490021 	movtne	r0, #36897	; 0x9021
  b4:	00000b2f 	andeq	r0, r0, pc, lsr #22
  b8:	0b00240c 	bleq	90f0 <startup-0x1fff6f10>
  bc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  c0:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
  c4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  c8:	0b3a0e03 	bleq	e838dc <startup-0x1f17c724>
  cc:	0b390b3b 	bleq	e42dc0 <startup-0x1f1bd240>
  d0:	13491927 	movtne	r1, #39207	; 0x9927
  d4:	06120111 			; <UNDEFINED> instruction: 0x06120111
  d8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  dc:	00130119 	andseq	r0, r3, r9, lsl r1
  e0:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
  e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  e8:	0b3b0b3a 	bleq	ec2dd8 <startup-0x1f13d228>
  ec:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  f0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  f4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  f8:	00130119 	andseq	r0, r3, r9, lsl r1
  fc:	00050f00 	andeq	r0, r5, r0, lsl #30
 100:	0b3a0803 	bleq	e82114 <startup-0x1f17deec>
 104:	0b390b3b 	bleq	e42df8 <startup-0x1f1bd208>
 108:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 10c:	Address 0x000000000000010c is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000015a 	andeq	r0, r0, sl, asr r1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	2000016a 	andcs	r0, r0, sl, ror #2
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000137 	andeq	r0, r0, r7, lsr r1
   4:	00440003 	subeq	r0, r4, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  20:	6c69772f 	stclvs	7, cr7, [r9], #-188	; 0xffffff44
  24:	6d61696c 			; <UNDEFINED> instruction: 0x6d61696c
  28:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
  2c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  30:	652f7374 	strvs	r7, [pc, #-884]!	; fffffcc4 <GPIO_MODER+0xdffffb4c>
  34:	38346164 	ldmdacc	r4!, {r2, r5, r6, r8, sp, lr}
  38:	656b2f32 	strbvs	r2, [fp, #-3890]!	; 0xfffff0ce
  3c:	00006279 	andeq	r6, r0, r9, ror r2
  40:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  44:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  48:	00010063 	andeq	r0, r1, r3, rrx
  4c:	01050000 	mrseq	r0, (UNDEF: 5)
  50:	00020500 	andeq	r0, r2, r0, lsl #10
  54:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  58:	21130109 	tstcs	r3, r9, lsl #2
  5c:	02212f21 	eoreq	r2, r1, #33, 30	; 0x84
  60:	01010003 	tsteq	r1, r3
  64:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  68:	00001002 	andeq	r1, r0, r2
  6c:	01160320 	tsteq	r6, r0, lsr #6
  70:	054b0505 	strbeq	r0, [fp, #-1285]	; 0xfffffafb
  74:	05260809 	streq	r0, [r6, #-2057]!	; 0xfffff7f7
  78:	21051c11 	tstcs	r5, r1, lsl ip
  7c:	2e09052e 	cfsh32cs	mvfx0, mvfx9, #30
  80:	05211105 	streq	r1, [r1, #-261]!	; 0xfffffefb
  84:	09052e21 	stmdbeq	r5, {r0, r5, r9, sl, fp, sp}
  88:	2111052e 	tstcs	r1, lr, lsr #10
  8c:	052e2105 	streq	r2, [lr, #-261]!	; 0xfffffefb
  90:	11052e09 	tstne	r5, r9, lsl #28
  94:	2e210521 	cfsh64cs	mvdx0, mvdx1, #17
  98:	212e0905 			; <UNDEFINED> instruction: 0x212e0905
  9c:	6a220105 	bvs	8804b8 <startup-0x1f77fb48>
  a0:	053e0905 	ldreq	r0, [lr, #-2309]!	; 0xfffff6fb
  a4:	0b052e07 	bleq	14b8c8 <startup-0x1feb4738>
  a8:	4a08053e 	bmi	2015a8 <startup-0x1fdfea58>
  ac:	02001705 	andeq	r1, r0, #1310720	; 0x140000
  b0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
  b4:	08052f0b 	stmdaeq	r5, {r0, r1, r3, r8, r9, sl, fp, sp}
  b8:	0017054a 	andseq	r0, r7, sl, asr #10
  bc:	20010402 	andcs	r0, r1, r2, lsl #8
  c0:	052f0b05 	streq	r0, [pc, #-2821]!	; fffff5c3 <GPIO_MODER+0xdffff44b>
  c4:	17054a08 	strne	r4, [r5, -r8, lsl #20]
  c8:	01040200 	mrseq	r0, R12_usr
  cc:	2f0b0520 	svccs	0x000b0520
  d0:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
  d4:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
  d8:	0c052001 	stceq	0, cr2, [r5], {1}
  dc:	21010530 	tstcs	r1, r0, lsr r5
  e0:	3d0a0577 	cfstr32cc	mvfx0, [sl, #-476]	; 0xfffffe24
  e4:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
  e8:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
  ec:	4b130521 	blmi	4c1578 <startup-0x1fb3ea88>
  f0:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
  f4:	1c053e0d 	stcne	14, cr3, [r5], {13}
  f8:	2e26053d 	mcrcs	5, 1, r0, cr6, cr13, {1}
  fc:	052e2a05 	streq	r2, [lr, #-2565]!	; 0xfffff5fb
 100:	17052020 	strne	r2, [r5, -r0, lsr #32]
 104:	00200520 	eoreq	r0, r0, r0, lsr #10
 108:	37020402 	strcc	r0, [r2, -r2, lsl #8]
 10c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 110:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 114:	0105440c 	tsteq	r5, ip, lsl #8
 118:	01040200 	mrseq	r0, R12_usr
 11c:	12056921 	andne	r6, r5, #540672	; 0x84000
 120:	9f01052f 	svcls	0x0001052f
 124:	3d050585 	cfstr32cc	mvfx0, [r5, #-532]	; 0xfffffdec
 128:	02000f05 	andeq	r0, r0, #5, 30
 12c:	05320104 	ldreq	r0, [r2, #-260]!	; 0xfffffefc
 130:	0402000d 	streq	r0, [r2], #-13
 134:	01025801 	tsteq	r2, r1, lsl #16
 138:	Address 0x0000000000000138 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	4164626b 	cmnmi	r4, fp, ror #4
  80:	76697463 	strbtvc	r7, [r9], -r3, ror #8
  84:	00657461 	rsbeq	r7, r5, r1, ror #8
  88:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffffd4 <GPIO_MODER+0xdffffe5c>
  8c:	69772f65 	ldmdbvs	r7!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
  90:	61696c6c 	cmnvs	r9, ip, ror #24
  94:	6f442f6d 	svcvs	0x00442f6d
  98:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  9c:	2f73746e 	svccs	0x0073746e
  a0:	34616465 	strbtcc	r6, [r1], #-1125	; 0xfffffb9b
  a4:	6b2f3238 	blvs	bcc98c <startup-0x1f433674>
  a8:	2f627965 	svccs	0x00627965
  ac:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  b0:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  b4:	68730063 	ldmdavs	r3!, {r0, r1, r5, r6}^
  b8:	2074726f 	rsbscs	r7, r4, pc, ror #4
  bc:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  c0:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  c4:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  c8:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
  cc:	44495f4f 	strbmi	r5, [r9], #-3919	; 0xfffff0b1
  d0:	49485f52 	stmdbmi	r8, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
  d4:	6b004847 	blvs	121f8 <startup-0x1ffede08>
  d8:	65476462 	strbvs	r6, [r7, #-1122]	; 0xfffffb9e
  dc:	6c6f4374 	stclvs	3, cr4, [pc], #-464	; ffffff14 <GPIO_MODER+0xdffffd9c>
  e0:	54554f00 	ldrbpl	r4, [r5], #-3840	; 0xfffff100
  e4:	00545550 	subseq	r5, r4, r0, asr r5
  e8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  ec:	00707574 	rsbseq	r7, r0, r4, ror r5
  f0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  f4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  f8:	61686320 	cmnvs	r8, r0, lsr #6
  fc:	616d0072 	smcvs	53250	; 0xd002
 100:	2f006e69 	svccs	0x00006e69
 104:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 108:	6c69772f 	stclvs	7, cr7, [r9], #-188	; 0xffffff44
 10c:	6d61696c 			; <UNDEFINED> instruction: 0x6d61696c
 110:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
 114:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 118:	652f7374 	strvs	r7, [pc, #-884]!	; fffffdac <GPIO_MODER+0xdffffc34>
 11c:	38346164 	ldmdacc	r4!, {r2, r5, r6, r8, sp, lr}
 120:	656b2f32 	strbvs	r2, [fp, #-3890]!	; 0xfffff0ce
 124:	47006279 	smlsdxmi	r0, r9, r2, r6
 128:	5f4f4950 	svcpl	0x004f4950
 12c:	5f52444f 	svcpl	0x0052444f
 130:	48474948 	stmdami	r7, {r3, r6, r8, fp, lr}^
 134:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
 138:	4f4d5f4f 	svcmi	0x004d5f4f
 13c:	00524544 	subseq	r4, r2, r4, asr #10
 140:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000064 	andeq	r0, r0, r4, rrx
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  3c:	00000007 	andeq	r0, r0, r7
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	00000000 	andeq	r0, r0, r0
  48:	20000074 	andcs	r0, r0, r4, ror r0
  4c:	00000058 	andeq	r0, r0, r8, asr r0
  50:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  54:	41018e02 	tstmi	r1, r2, lsl #28
  58:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  5c:	00000007 	andeq	r0, r0, r7
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	00000000 	andeq	r0, r0, r0
  68:	200000cc 	andcs	r0, r0, ip, asr #1
  6c:	00000060 	andeq	r0, r0, r0, rrx
  70:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  74:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  78:	280e4101 	stmdacs	lr, {r0, r8, lr}
  7c:	00070d41 	andeq	r0, r7, r1, asr #26
  80:	00000018 	andeq	r0, r0, r8, lsl r0
  84:	00000000 	andeq	r0, r0, r0
  88:	2000012c 	andcs	r0, r0, ip, lsr #2
  8c:	00000028 	andeq	r0, r0, r8, lsr #32
  90:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  94:	41018e02 	tstmi	r1, r2, lsl #28
  98:	0000070d 	andeq	r0, r0, sp, lsl #14
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	20000154 	andcs	r0, r0, r4, asr r1
  a8:	00000016 	andeq	r0, r0, r6, lsl r0
  ac:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  b0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  b4:	180e4101 	stmdane	lr, {r0, r8, lr}
  b8:	00070d41 	andeq	r0, r7, r1, asr #26
